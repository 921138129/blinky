
<!doctype html>
<html>
<title>blinky - a fisheye mod for Quake</title>

<head>

<style type="text/css">

body
{
   line-height:1.5em;
}

div.globe_images
{
   height:170px;
}

div.globe_images img
{
   float:left;
   margin:2px;
}

pre.code
{
   line-height: 1.25em;
   margin-left: 25px;
   padding: 5px;
}

table.globes td
{
   border-collapse: collapse;
   border: 2px solid white;
   padding: 10px;
   width: 270px;
   text-align: center;
   background: #ddd;
}

table.globes td div.caption
{
   text-align: center;
   color: #555;
   margin-bottom: 20px;
}

div.title
{
   background: #eee;
   padding:10px;
}

div.title h1
{
   display:inline;
}

h2
{
   font-size: 1.25em;
}

p
{
   margin-left: 10px;
}

table.intro
{
float:right;
margin:10px;
}

table.intro td
{
background: #666;
padding: 10px;
}

table.intro div.caption
{
text-align:center;
color:white;
}

</style>

</head>

<body>

<div class="title">
<h1 class="title">blinky</h1>
<img src="icons/Lisas-Wedding-6-eyed-Blinky-icon.png" alt="Blinky Icon by Jeanette Foshee" /><br/>
an experiment in panoramic gaming
</div>

<table class="intro">
<tr>
<td>
<a href="shots/intro90b.gif"><img src="shots/intro90b.gif" width=240 /></a>
<div class="caption">90&deg; Standard <acronym title="Field of View">FOV</acronym></div>
</td>
</tr>
<tr>
<td>
<a href="shots/intro180b.gif"><img src="shots/intro180b.gif" width=240 /></a>

<div class="caption">180&deg; Panini <acronym title="Field of View">FOV</acronym></div>
</td>
</tr>
<tr>
<td>
<a href="shots/intro360b.gif"><img src="shots/intro360b.gif" width=240 /></a>
<div class="caption">360&deg; Fahey <acronym title="Field of View">FOV</acronym></div>
</td>
</tr>
</table>

<h2>Abstract</h2>
<p>
In photography, it is common to overcome the limitations of a camera's Field of View (FOV) by "stitching" multiple photographs together into a panorama.  This method has only been demonstrated once in the context of a game by Fisheye Quake in 1999.  It stitched six views into a single perspective using the <em>equidistant fisheye</em> projection.  We wish to continue in this direction by exploring the practicality of other panoramic methods in gameplay.  
</p>
<p>
To this end, we introduce an extension to Fisheye Quake called Blinky.  It provides a new front-end for customizing your ingame panoramic perspective.  Specifically, the <em>environment map</em> and <em>projection</em> logic are abstracted into Lua scripts, called Globe and Lens scripts, respectively.  In this paper, we discuss this new architecture and the experimental perspectives that were created with it.
</p>
<p>
As a result, we find that the Panini projection produces the most practical wide angle perspective for gameplay that is less prone to nausea than the other projections.
</p>

<h2>Download</h2>

<ul>
<li><a href="blinky-0.1.zip">blinky for windows xp</a></li>
<li><a href="http://github.com/shaunew/blinky">source code</a></li>
</ul>

<h2>Commands</h2>
Bring down the console with the tilde (~) key and you can type the following commands:

<pre class="code">
globe &lt;name&gt;   : choose a globe (affects picture quality and render speed)
lens &lt;name&gt;    : choose a lens (affects the shape of your view)
hfov &lt;degrees&gt; : zoom by specifying horizontal FOV
vfov &lt;degrees&gt; : zoom by specifying vertical FOV
hfit           : zoom by fitting your view horizontal bounds in the screen
hfit           : zoom by fitting your view's vertical bounds in the screen
fit            : zoom by fitting your whole view in the screen
rubix          : display colored grid for each rendered view in the globe
</pre>

<h2>Globes</h2>
<p>
A Globe is the entire image of your environment, composed of smaller images stiched together.  Thus, a Globe script describes where to point the camera and how far to zoom when capturing each of image plate.  The following is an illustration of the packaged globes in Blinky.  They show how each image rendered by Quake fits together into a polyhedron net after some cropping.
</p>

<table class="globes">
<tr>
   <td>
      <div class="caption">Cube</div>
      <a href="shots/cube_full.gif"><img src="shots/cube_full.png"/></a>
   </td>
   <td>
      <div class="caption">Triangular Prism</div>
      <a href="shots/trism_full.gif"><img src="shots/trism_full.png"/></a>
   </td>
   <td>
      <div class="caption">Tetrahedron</div>
      <a href="shots/tetra_full.gif"><img src="shots/tetra_full.png"/></a>
   </td>
</tr>
</table>

<h2>Lenses</h2>
<p>
A Lens shapes the panoramic view by mapping the Globe to the final screen image.  Thus, a Lens script describes the mathematical projections to make this possible. The following is an illustration of the packaged lenses in Blinky.
</p>

<h2>Acknowledgements</h2>

<ul>
   <li><a href="http://strlen.com/gfxengine/fisheyequake/">Aardappel for Fisheye Quake</a></li>
   <li><a href="http://en.wikipedia.org/wiki/Fisheye_lens#Mapping_function">Peter Weiden for Fisheye Projection illustrations</a></li>
   <li><a href="http://vedutismo.net/Pannini/">Thomas K. Sharpless for Panini Projection</a></li>
   <li><a href="http://home.comcast.net/~gevenden56/proj/">Gerald Evenden for libproj</a></li>
   <li><a href="http://www.progonos.com/furuti/MapProj/Normal/TOC/cartTOC.html">Carlos Furuti for Progonos</a></li>
   <li>Ashlee for the support</li>
</ul>

<h2>History</h2>
Project Start: April 2011<br/>
Last Update: August 12, 2011 </br>

</body>

</html>
